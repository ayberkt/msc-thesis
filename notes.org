* Misc
** Investigate the following remark by Abramsky further (from his PhD thesis).

   #+BEGIN_SRC markdown
    Scott has shown how the theory can be based on elementary, and finitary,
    set-theoretic representations, which in the case of information systems are
    deliberately suggestive of proof theory.
   #+END_SRC

** Ideas
   - The thing that is to a non-deterministic pushdown automaton what a Büchi automaton
     is to a finite automaton.
** These lectures by André Joyal: https://www.youtube.com/watch?v=Ro8KoFFdtS4&t=891s
** Disciplines themselves form a discipline
   - For instance, for the discipline of communication theory, there was some sort of
     problematic experiments which led to the link between thermodynamics (the outcome).
     Applying the next function on this outcome gave us information theory. For
     information theory, there were some other problems (i.e., the experiments, what were
     they?), the outcome of which was the linking with computer science applying `next` on
     which gave us algorithmic information theory.
** `cubical` working commit
   - 43d5fcf 2020-02-06 | Mapping cones and dunce cap contraction (#214) (HEAD) [Matthew Yacavone]
* Submission
** SHA1 sum of first submission: `a605451576c7526baa173d4f7eebf085760ff7c4`.
* Meetings
** <2019-09-27 Fri>
*** Given a poset, the set of downward-closed subsets forms a frame.
*** Lawvere-Tierney topology.
** <2019-10-04 Fri>
*** Nucleus of a frame: ν : L → L
*** J-closed elements form a frame.
*** Remove the index mono and set requirements from the notion of family-based subset.
** ii
*** _◀_ : D(A) → D(A)
*** U ⊆ ◀ U
*** Thm:
*** Lawvere-Tierney topology: j : Ω → Ω



** <2019-10-23 Wed>
   - Given a in some poset and BCov(a), S ∈ BCov(a) implies S ⊑ a↓.

   - _Locality condition_: if b ≤ a and S ∈ Cov(a) then

          ∃ T ∈ Cov(b). ∀ t ∈ T. ∃ s ∈ S. t ≤ s.

          ⇑ The idea is to require this condition instead of Johstone's meet stability.

          ⇑ This is Dragalin's condition from a paper Thierry did not remember during the
     meeting. He will find it by the meeting on <2019-10-25 Fri>.

   - Sambin's definition starts with semilattices which is not the case in Dragalin's
     definition. When viewed categorically, this corresponds to not requiring the category
     to have pullbacks or something like that.

     | Check out Sketches of An Elephant regarding this. |

   - Start with a coverage that satisfies locality and define the nucleus from that.

   - I will have to truncate the inductively defined coverage relation j_C(V).

   - j_C(V) will be downward-closed.

   - If a ◀ V and a ◀ W then a ◀ (V ∩ W), since it will be truncated:

         | if ∥ a ◀ V ∥ and ∥ a ◀ W ∥ then ∥ a ◀ (V ∩ W) ∥ |

     The fact that the conclusion is a proposition without the truncation means that we
     can get rid of the truncations.

   - A lemma will be required for this: if a ◀ W and a ε V then a ◀ (V ∩ W).

   - V sieve, a ◀ V.

   - "Sieve": categorical notion of downward-closed subset.

     | Check out Mac Lane and Moerdijk for this sort of thing. |

** <2019-11-01 Fri>
   - The second condition is like the reproducibility of experiments. It says something
     along the lines of: when we have more knowledge, we can do at least as many
     experiments as before.
   - `outcome` and `next`, together, define an enumeration of the stages.

** <2019-11-08 Fri>
   - [ ] Prove: simulation ⇒ simulation⋆
   - [ ] Define a binary operation on `Experiment⋆` that given two `Experiment⋆`s,
     produces a new `Experiment⋆` that is a refinement of both.
   - [X] Define a refinement relation expressing when a stump refines another.
   - [X] Prove lemma (1).
   - [ ] Prove lemma (2).
     - The main lemma towards proving that the covering relation is a nucleus.
     - This  is the thing where the conclusion is truncated so we can remove the
       truncations in the hypotheses.
   - NOTE Progressiveness is a property (is propositional) whereas simulation is a
     structure (it has non-trivial homotopy structure).
   - Once these have been done, give an example of a discipline that is a distributive
     bounded lattice (Stone space) (as Thierry exemplified on the board).
   - The Fan Theorem in fact says: "the Cantor space has enough points".

** <2019-12-13 Fri>
*** Most importantly: formal topology cannot be done in univalent foundations
    - It was realised by Thierry, upon a question I asked regarding how to show that the
      coverage relation is a nucleus, that it is actually not possible to do this. We
      need _◀_ to not have a truncated Σ but then it results in a situation where it is
      not a poset; it's something like an ∞-poset the meaning which is not clear. It is
      not clear what I will do about this but it seems that the main plan of my thesis
      is shattered.
    - However, the situation is not as tragic as I made it sound since disciplines are
      sufficient for presenting Stone spaces (in the non-standard sense of Sambin) which
      I can still use for developing domain theory and getting other applications.
*** Regarding the _⊗_ operation
    - This is like a sup of two partitions.
    - The lattice of partitions is important.
    - Further reading: Gian-Carlo Rota, look up the lattice of partitions.
    - It may be the case that this _⊗_ operation is not only a lower bound but actually
      the _greatest_ lower bound for the refinement preorder.
    - TODO: try to prove associativity of _⊗_.
*** Regarding the refinement operation
    - The definition of `refines` looks like
        #+BEGIN_SRC agda
          refines : (D : Discipline ℓ₀ ℓ₁) {s s′ : stage D}
                  → experiment⋆ D s′ → experiment⋆ D s → Set (ℓ₀ ⊔ ℓ₁)
          refines D@(P , _) e f = (λ - → - ↓[ P ] leaves e) ⊆ (λ - → - ↓[ P ] leaves f)
        #+END_SRC
      It might be a good idea to introduce better notation for this relation between
      enumerated subsets.
        #+BEGIN_SRC agda
          (λ - → - ↓[ P ] leaves e) ⊆ (λ - → - ↓[ P ] leaves f)
        #+END_SRC
    - Perhaps, there is in fact a better, more standard symbol for the refinement
      relation.
    - The notion of a refinement cover is standard in point-set topology:
        https://en.wikipedia.org/wiki/Cover_(topology)#Refinement.
      It might make sense to talk about things in a more standard way using this notion.
    - Consider refactoring the statement of `⊗-lemma`s using the notion of refinement
      (_ℛ_). It should look something like this
       #+BEGIN_SRC agda
         ⊗-lemma₀ : (a : stage D) (t t′ : experiment⋆ D a) → (t ⊗ t′) ℛ[ D ] t
       #+END_SRC


*** Regarding the `cover-of` relation
    - TODO: The subset `U`, in `a ◀ U`, will be downward-closed when I use it so it must
      suffice to talk about just the leaves not things below the leaves.
** <2020-01-23 Thu>
   #+ATTR_ORG: :width 800
   [[[[file:photos/universal-property.jpg]]]]
** <2020-02-21 Fri>
*** Wrote down the notion `represents` in Agda during the meeting.
*** Universal property
     - Given a formal topology on set A and a function f_A : A → free(A), for some
       f : A → L, where L is any frame, there exists an m : free(A) → L, that uniquely
       makes the diagram commute: Σ![m ∈ free(A) → L ] m ∘ f_A = f.
     - In fact, the uniqueness should be trivial (one could think that we would need an
       extra condition on A to force uniqueness but this is not the case because it is
       trivial).
